/**
 * 车辆在地图的tip处理类
 */
function monitorVehicleMapTip(){
	this.roleCls = null;  //权限类对象
	this.drowingVehiIdno = null;  //正在画区域的车辆
	this.defaultLineId = 920000000;//线路id规定为920000000+线路id
	this.defaultStationId = 930000000;//站点id规定为930000000+站点id
	this.mapType = 0; //地图类型 默认谷歌 3百度
	this.defaultVehicleDriverId = 940000000; //车辆行驶线路  940000000+线路id+1/2/3
}

//赋值权限类对象
monitorVehicleMapTip.prototype.setRoleCls = function(roleCls) {
	if(typeof roleCls != 'undefined' && roleCls != null) {
		this.roleCls = roleCls;
	}
}

//赋值地图类型
monitorVehicleMapTip.prototype.setMapType = function(mapType) {
	this.mapType = mapType;
}

//判断车辆是否在地图可视范围内
monitorVehicleMapTip.prototype.isVehiclePtInVisibleMap = function(jingDu, weiDu){
	if(jingDu != null && weiDu != null) {
		if(typeof ttxMap != 'undefined' && ttxMap != null) {
			return ttxMap.isPtInVisibleMap(jingDu, weiDu);
		}
	}
	return false;
}

//判断是否环卫，然后根据条件是否显示指定类型的车辆
monitorVehicleMapTip.prototype.isShowVehicle = function(vehicle) {
	if(_getRootFrameElement().myUserRole.isSanitationTruck() &&
		typeof monitorLine != 'undefined' && monitorLine != null) {//环卫
		if(vehicle.getVehiType() == 2 && monitorLine.isShowWateringVehicle) { //"洒水车"
			return true;
		}else if(vehicle.getVehiType() == 3 && monitorLine.isShowSweepingVehicle) {//'扫地车'
			return true;
		}else {//'清洗车'
			if(monitorLine.isShowCleaningVehicle) {
				return true;
			}
		}
		return false;
	}
	return true;
}

//添加车辆到地图//判断是否在地图可视范围内
//isCheckVisible 是否判断在可视地图范围内
monitorVehicleMapTip.prototype.addVehicleToMap = function(vehicle, status, isCheckVisible){
	if(typeof ttxMap != 'undefined' && ttxMap != null) {
		//如果车辆在地图可视范围内，则添加进地图
		if(this.isShowVehicle(vehicle) && (!isCheckVisible || this.isVehiclePtInVisibleMap(status.mapJingDu, status.mapWeiDu))) {
			//如果地图中有车辆，则更新状态，否则添加
			if(ttxMap.findVehicle(vehicle.getIdno()) == null) {
				//插入车辆结点
				ttxMap.insertVehicle(vehicle.getIdno());
				//配置车辆名称 如果启用展示运营线路   就给mapmarker的车辆类赋值运营线路
				if(top.enableShowLinesOperation){
					ttxMap.setVehiName(vehicle.getIdno(),vehicle.getName());
                    ttxMap.setVehiLinesOperation(vehicle.getIdno(),vehicle.linesOperation); //运营线路
				} else {
					ttxMap.setVehiName(vehicle.getIdno(),vehicle.getName());
				}
				//配置车辆图标
				ttxMap.setVehiIcon(vehicle.getIdno(),vehicle.getIcon());
				//初始化地图上车辆弹出菜单
				this.initVehiPopMenu(vehicle);
			}
			//更新地图上车辆信息
			//新增到地图上重新解析
//			status = vehicle.gpsParseTrackStatus();
			this.updateStatusInMap(vehicle.getIdno(), status);
		}else {
			if(ttxMap.findVehicle(vehicle.getIdno()) != null) {
				ttxMap.deleteVehicle(vehicle.getIdno());
			}
		}
	}
};

/**
 * 将车辆信息更新到地图上
 * vehiIdno 车牌号
 * status 状态
 */
monitorVehicleMapTip.prototype.updateStatusInMap = function(vehiIdno, status) {
	//gps有效   
	//车辆停用没有更新位置 会导致切换地图偏移 
//	geocoderLat
//	:
//	22.650056
//	geocoderLng
//	:
//	113.828808
	
	if (status.isGpsValid) {
		var mapVehicle = ttxMap.findVehicle(vehiIdno);
		if(mapVehicle != null) {
			if(mapVehicle.getTime() == null || status.gpsTime != mapVehicle.getTime()) {
				//更新解析地理位置的经纬度
				ttxMap.updateVehicleGeocoderLngLat(vehiIdno, status.geocoderLng, status.geocoderLat);
				//往地图上画点
				var mapPoint = geocoderLngLat(status.geocoderLat, status.geocoderLng, _getRootFrameElement().getMapType());
				ttxMap.updateVehicle(vehiIdno, mapPoint.lng, mapPoint.lat, status.huangXiang, status.image, status.speed, status.gpsTime, status.statusString);
			}
		}
	}
};

/**
 * 将车辆信息更新到地图上
 * vehiIdno 车牌号
 * status 状态
 */
monitorVehicleMapTip.prototype.updateStatusInMapNew = function(vehiIdno, status) {
	//gps有效   
	if (status.isGpsValid) {
		var mapVehicle = ttxMap.findVehicle(vehiIdno);
		//不再范围内了
		if(mapVehicle != null) {
			//更新解析地理位置的经纬度
			ttxMap.updateVehicleGeocoderLngLat(vehiIdno, status.geocoderLng, status.geocoderLat);
			var mapPoint = geocoderLngLat(status.geocoderLat, status.geocoderLng, _getRootFrameElement().getMapType());
			ttxMap.updateVehicle(vehiIdno, mapPoint.lng, mapPoint.lat, status.huangXiang, status.image, status.speed, status.gpsTime, status.statusString);
		}
	}
};


//移除车辆到地图
monitorVehicleMapTip.prototype.removeVehicleInMap = function(vehiIdno){
	if (typeof ttxMap != 'undefined' && ttxMap != null) {
		if(ttxMap.findVehicle(vehiIdno) != null) {
			ttxMap.deleteVehicle(vehiIdno);
		}
	}
};

//移除地图所有车辆
monitorVehicleMapTip.prototype.removeAllVehicleInMap = function(){
	if (typeof ttxMap != 'undefined' && ttxMap != null) {
		ttxMap.deleteAllVehicle();
	}
};

//在地图列表中，也将车辆居中
monitorVehicleMapTip.prototype.selectVehicle = function(vehiIdno){
	if(typeof ttxMap != 'undefined' && ttxMap != null) {
		ttxMap.selectVehicle(vehiIdno);
	}
}

//设置菜单属性
monitorVehicleMapTip.prototype.setItemParam = function(id, name, title, popId) {
	var item = {};
	item.id = id;
	item.name = name;
	item.title = title;
	item.popId = popId;
	return item;
}

//初始化地图上车辆弹出菜单
monitorVehicleMapTip.prototype.initVehiPopMenu = function(vehicle){
	if(vehicle.getIsDisable()) {
		return;
	}
	//服务期限
	if(!vehicle.isServicePeriod()){
		return;
	}
	//一级菜单个数
	var menuCount = 0;
	if(vehicle.isInSystemVehicle()) {//系统内车辆
		//配置弹出菜单
		//车辆在线
		if(vehicle.isOnline()) {
			//视频设备存在
			var videoDevice = vehicle.getVideoDevice();
			var gpsDevice = vehicle.getGpsDevice();
			if(videoDevice != null && videoDevice.isOnline()) {
				var mainMenu = [];
				//视频
				if(this.roleCls.isVideoSupport()) {
					ttxMap.setVehiMenu(vehicle.getIdno(), 'video', _getRootFrameElement().lang.video, 1, 'video');
					mainMenu.push('video');
					menuCount++;
				}
				//对讲
				if(this.roleCls.isTalkbackSupport() && videoDevice.isTalkbackSupport()) {
					ttxMap.setVehiMenu(vehicle.getIdno(), 'talkback', _getRootFrameElement().lang.talkback, 1, 'talkback');
					menuCount++;
				}
				//监听
				if(this.roleCls.isMonitorSupport() && videoDevice.isMonitorSupport()) {
					ttxMap.setVehiMenu(vehicle.getIdno(), 'listen', _getRootFrameElement().lang.monitor, 1, 'listen');
					mainMenu.push('listen');
					menuCount++;
				}
				
				//视频通道
				var chnName = videoDevice.getChnName();
				if(chnName != null && chnName != '') {
					var chanNames = chnName.split(',');
					for (var i = 0; i < mainMenu.length; i++) {
						for(var j = 0; j < chanNames.length; j++) {
							if(videoDevice.isChannelStatus(j)) {
								ttxMap.setVehiPopMenuName(vehicle.getIdno(), mainMenu[i],  j, chanNames[j], 'CH'+(j+1));
							}
						}
					}
				}else {
					for (var i = 0; i < mainMenu.length; i++) {
						ttxMap.setVehiPopMenuName(vehicle.getIdno(), mainMenu[i],  -1, 'CH1', 'CH1');
					}
				}
				
			}
			
			var chanNames = new Array();
			if(videoDevice != null && videoDevice.isOnline()) {
				//视频通道
				var chnName = videoDevice.getChnName();
				if(chnName != null && chnName != '') {
					chanNames = chnName.split(',');
				}else {
					if(vehicle.getDevList().length == 2 && gpsDevice != null && gpsDevice.isOnline()) {
						chnName = gpsDevice.getChnName();
						if(chnName != null && chnName != '') {
							chanNames = chnName.split(',');
						}
					}else {
						//抓拍
						if(this.roleCls.isCaptureSupport()) {
							ttxMap.setVehiMenu(vehicle.getIdno(), 'capture', _getRootFrameElement().lang.capture, 1, 'capture');
							ttxMap.setVehiPopMenuName(vehicle.getIdno(), 'capture',  -1, "CH1", "CH1");
							menuCount++;
						}
					}
				}
			}else {
				if(gpsDevice != null  && gpsDevice.isOnline()) {
					var chnName = gpsDevice.getChnName();
					if(chnName != null && chnName != '') {
						chanNames = chnName.split(',');
					}
				}
			}
			if(chanNames.length > 0) {
				//抓拍
				if(this.roleCls.isCaptureSupport()) {
					ttxMap.setVehiMenu(vehicle.getIdno(), 'capture', _getRootFrameElement().lang.capture, 1, 'capture');
					for(var j = 0; j < chanNames.length; j++) {
						if(vehicle.isChannelStatus(j)) {
							ttxMap.setVehiPopMenuName(vehicle.getIdno(), 'capture',  j, chanNames[j], 'CH'+(j+1));
						}
					}
					menuCount++;
				}
			}
		}
		
		//单设备一级菜单为更多，两个设备则是一个gps设备，一个视频设备
		if(vehicle.getDevList().length == 1) {//单设备
			var mainMenu = [];
			//下发文字信息
			if(this.roleCls.isTTSSupport() && vehicle.isOnline() && vehicle.devList[0].isTTSSupport()) {
				mainMenu.push(this.setItemParam(vehicle.getIdno(), 'sendMessage', _getRootFrameElement().lang.monitor_send_TTS, 1, 'sendMessage'));
			}
			//设备信息查看 只有TTX(WKP)协议的设备才支持此功能
			if(this.roleCls.isDevInfoSupport() && vehicle.isOnline()  && vehicle.getDevList()[0].isCanFindInfo()) {
				mainMenu.push(this.setItemParam(vehicle.getIdno(), 'devInfo', _getRootFrameElement().lang.monitor_deviceInfo, 1, 'devInfo'));
			}
			//参数配置
			if(this.roleCls.isParamConfigSupport() && vehicle.isOnline() 
					&& (vehicle.getDevList()[0].isCan808ParamConfig() || vehicle.getDevList()[0].isCanTtxParamConfig())
					&& !vehicle.isPeopleTerminal()) {
				mainMenu.push(this.setItemParam(vehicle.getIdno(), 'paramConfig', _getRootFrameElement().lang.monitor_paramConfig, 1, 'paramConfig'));
			}
			//离线升级
			if(this.roleCls.isDevUpgradeSupport() && vehicle.devList[0].hasOfflineUpgrade()) {
				mainMenu.push(this.setItemParam(vehicle.getIdno(), 'upgrade', _getRootFrameElement().lang.monitor_deviceUpgrade, 1, 'upgrade'));
				mainMenu.push(this.setItemParam(vehicle.getIdno(), 'issued', _getRootFrameElement().lang.issuedFile, 1, 'issued'));
			}
			//胎压监测   地图上的车辆信息，更多按钮中的
//				if(this.roleCls.isTpmsSupport() && vehicle.isOnline() && vehicle.devList[0].hasTpms() && !vehicle.isPeopleTerminal()){
//					mainMenu.push(this.setItemParam(vehicle.getIdno(), 'tpms', 'TPMS', 1, 'tpms'));
//				}
			if(menuCount + mainMenu.length <= 6) {
				for (var i = 0; i < mainMenu.length; i++) {
					var item = mainMenu[i];
					ttxMap.setVehiMenu(item.id, item.name, item.title, item.popId, item.name);	
				}
			}else {
				while(menuCount < 5) {
					var item = mainMenu[0];
					mainMenu.splice(0, 1);
					ttxMap.setVehiMenu(item.id, item.name, item.title, item.popId, item.name);
					menuCount++;
				}
				ttxMap.setVehiMenu(vehicle.getIdno(), 'more', _getRootFrameElement().lang.more, 1, 'more');
				for (var i = 0; i < mainMenu.length; i++) {
					var item = mainMenu[i];
					ttxMap.setVehiPopMenuName(item.id, 'more', item.name, item.title, item.name);
				}
			}
		}else {
			var videoDevice = vehicle.getVideoDevice(); //视频设备
			var gpsDevice = vehicle.getGpsDevice();//gps设备
			
			var isExistsGps = false;  //是否存在gps设备菜单
			var isExistsVideo = false;  //是否存在视频设备菜单
			if(videoDevice != null) {
				ttxMap.setVehiMenu(vehicle.getIdno(), 'videoDevice', _getRootFrameElement().lang.monitor_videoDevice, 1, 'videoDevice');
			}
			if(gpsDevice != null) {
				ttxMap.setVehiMenu(vehicle.getIdno(), 'gpsDevice', _getRootFrameElement().lang.monitor_gpsDevice, 1, 'gpsDevice');
			}
			
			//下发文字信息
			if(this.roleCls.isTTSSupport() && vehicle.isOnline()) {
				if(gpsDevice != null && gpsDevice.isOnline() && gpsDevice.isTTSSupport()) {
					ttxMap.setVehiPopMenuName(vehicle.getIdno(), 'gpsDevice', 'sendMessage', _getRootFrameElement().lang.monitor_send_TTS, 'sendMessage');
					isExistsGps = true;
				}
				if(videoDevice != null && videoDevice.isOnline() && videoDevice.isTTSSupport()) {
					ttxMap.setVehiPopMenuName(vehicle.getIdno(), 'videoDevice', 'sendMessage', _getRootFrameElement().lang.monitor_send_TTS, 'sendMessage');
					isExistsVideo = true;
				}
			}
			//设备信息查看
			if(this.roleCls.isDevInfoSupport()) {
				//只有TTX(WKP)协议的设备才支持此功能
				if(gpsDevice != null && gpsDevice.isOnline() && gpsDevice.isCanFindInfo()) {
					ttxMap.setVehiPopMenuName(vehicle.getIdno(), 'gpsDevice',  'devInfo', _getRootFrameElement().lang.monitor_deviceInfo,  'devInfo');
					isExistsGps = true;
				}
				if(videoDevice != null && videoDevice.isOnline() && videoDevice.isCanFindInfo()) {
					ttxMap.setVehiPopMenuName(vehicle.getIdno(), 'videoDevice',  'devInfo', _getRootFrameElement().lang.monitor_deviceInfo,  'devInfo');
					isExistsVideo = true;
				}
			}
			//参数配置
			if(this.roleCls.isParamConfigSupport()) {
				if(gpsDevice != null && gpsDevice.isOnline() && (gpsDevice.isCan808ParamConfig() || gpsDevice.isCanTtxParamConfig())) {
					ttxMap.setVehiPopMenuName(vehicle.getIdno(), 'gpsDevice',  'paramConfig', _getRootFrameElement().lang.monitor_paramConfig,  'paramConfig');
					isExistsGps = true;
				}
				if(videoDevice != null && videoDevice.isOnline() && (videoDevice.isCan808ParamConfig() || videoDevice.isCanTtxParamConfig())) {
					ttxMap.setVehiPopMenuName(vehicle.getIdno(), 'videoDevice',  'paramConfig', _getRootFrameElement().lang.monitor_paramConfig,  'paramConfig');
					isExistsVideo = true;
				}
			}
			//离线升级
			if(this.roleCls.isDevUpgradeSupport()) {
				if(videoDevice != null && videoDevice.hasOfflineUpgrade()) {
					ttxMap.setVehiPopMenuName(vehicle.getIdno(), 'videoDevice',  'upgrade', _getRootFrameElement().lang.monitor_deviceUpgrade,  'upgrade');
					ttxMap.setVehiPopMenuName(vehicle.getIdno(), 'videoDevice',  'issued', _getRootFrameElement().lang.issuedFile,  'issued');
					isExistsVideo = true;
				}
				if(gpsDevice != null && gpsDevice.hasOfflineUpgrade()) {
					ttxMap.setVehiPopMenuName(vehicle.getIdno(), 'gpsDevice',  'upgrade', _getRootFrameElement().lang.monitor_deviceUpgrade,  'upgrade');
					ttxMap.setVehiPopMenuName(vehicle.getIdno(), 'gpsDevice',  'issued', _getRootFrameElement().lang.issuedFile,  'issued');
					isExistsGps = true;
				}
			}
			//胎压监测   //打开这个功能的要求
			if(this.roleCls.isTpmsSupport() && vehicle.isOnline() && !vehicle.isPeopleTerminal()) {
				if(videoDevice != null && videoDevice.isOnline() && videoDevice.hasTpms()){
					ttxMap.setVehiPopMenuName(vehicle.getIdno(), 'videoDevice',  'tpms', 'TPMS',  'tpms');
					isExistsVideo = true;
				}
				if(gpsDevice != null && gpsDevice.isOnline() && gpsDevice.hasTpms()){
					ttxMap.setVehiPopMenuName(vehicle.getIdno(), 'gpsDevice',  'tpms', 'TPMS',  'tpms');
					isExistsGps = true;
				}
			}
			if(!isExistsGps) {//存在gps设备菜单
				ttxMap.delVehiMenu(vehicle.getIdno(), 'gpsDevice');
			}
			if(!isExistsVideo) {//存在视频设备菜单
				ttxMap.delVehiMenu(vehicle.getIdno(), 'videoDevice');
			}
		}
		//划区域操作  点和圆
		if(this.roleCls.isDrawAreaSupport()) {
			ttxMap.setVehiMenu(vehicle.getIdno(), 'drawAreaManage', _getRootFrameElement().lang.mapTool, 1, 'mapTool');
			ttxMap.setVehiPopMenuName(vehicle.getIdno(), 'drawAreaManage',  'drawPoint', _getRootFrameElement().lang.addPoint,  'drawPoint');
			ttxMap.setVehiPopMenuName(vehicle.getIdno(), 'drawAreaManage',  'drawCircle', _getRootFrameElement().lang.tipAddCircle,  'drawCircle');
			ttxMap.setVehiPopMenuName(vehicle.getIdno(), 'drawAreaManage',  'drawRectangle', _getRootFrameElement().lang.addRectangle,  'drawRectangle');
			ttxMap.setVehiPopMenuName(vehicle.getIdno(), 'drawAreaManage',  'drawPolygon', _getRootFrameElement().lang.addPolygon,  'drawPolygon');
		}
	}
	//危化的运单信息
	if(this.roleCls.isFindWaybillSupport()) {//危化管理
		ttxMap.setVehiMenu(vehicle.getIdno(), 'waybill', '电子运单', 1, 'waybill');
	}
	
	
	if(vehicle.isInSystemVehicle()) {//系统内车辆
		//轨迹回放
		if(this.roleCls.isTrackPlaybackSupport()) {
			ttxMap.setVehiMenu(vehicle.getIdno(), 'playback', _getRootFrameElement().lang.track_playback, 1, 'playback');
		//	ttxMap.setVehiMenu(vehicle.getIdno(), 'videoback', parent.lang.video_query, 1, 'videoback');
		}
		
		//录像回放 车辆包含视频设备
		if(vehicle.isSupportVideoReplay() && vehicle.getVideoDevice() && this.roleCls.isRecordPlaybackSupport()) {
			ttxMap.setVehiMenu(vehicle.getIdno(), 'videoback', _getRootFrameElement().lang.video_query, 1, 'videoback');
		}
		
	}
	
	
	
	//胎压监测    //地图上的车辆信息版面上的图标选项
	if(this.roleCls.isTpmsSupport() && vehicle.devList[0].hasTpms() && !vehicle.isPeopleTerminal()){
		ttxMap.setVehiMenu(vehicle.getIdno(), 'tpms', 'TPMS', 1, 'tpms');
//		mainMenu.push(this.setItemParam(vehicle.getIdno(), 'tpms', 'TPMS', 1, 'tpms'));
	}
	
}

/**
 * 地图上车辆Tip进行操作
 * @param vehiIdno  车牌号
 * @param menuId  菜单Id
 * @param popId  子菜单Id
 */
monitorVehicleMapTip.prototype.ttxMapClickmenuitem = function(vehiIdno, menuId, popId) {
	if(vehiIdno != null) {
		if(menuId == 'video') {//视频
			//如果视频窗口没展现，则不响应
			if ((typeof previewVideo) == 'function') {
				//popId 车辆对应的通道 0开始
				previewVideo(vehiIdno.toString(), popId);
			}
		}else if(menuId == 'talkback') {//对讲
			if(typeof paneInfo != 'undefined' && paneInfo != null && (typeof paneInfo.doTalkback) == 'function') {
				paneInfo.doTalkback(vehiIdno.toString());
			}
		}else if(menuId == 'listen') {//监听
			//popId 车辆对应的通道 0开始
			if(typeof paneInfo != 'undefined' && paneInfo != null && (typeof paneInfo.doListen) == 'function') {
				paneInfo.doListen(vehiIdno.toString(), Number(popId));
			}
		}else if(menuId == 'capture') {//抓拍
			//popId 车辆对应的通道 0开始
			if(typeof monitorMedia != 'undefined' && monitorMedia != null && (typeof monitorMedia.beforeImageCapture) == 'function') {
				monitorMedia.beforeImageCapture(popId, vehiIdno.toString());
			}
		}else if(menuId == 'devInfo' || popId == 'devInfo') {//设备信息
			var devIdno = "";
			var vehicle = _getRootFrameElement().vehicleManager.getVehicle(vehiIdno.toString());
			if (vehicle == null) {
				return;
			}
			if(menuId == 'more' || menuId == 'devInfo') {
				var device = vehicle.devList[0];
				devIdno = device.getIdno();
			}else if(menuId == 'gpsDevice') {
				var device = vehicle.getGpsDevice();
				devIdno = device.getIdno();
			}else if(menuId == 'videoDevice') {
				var device = vehicle.getVideoDevice();
				devIdno = device.getIdno();
			}
			if(typeof monitorMenu != 'undefined' && monitorMenu != null && (typeof monitorMenu.findDeviceInfo) == 'function') {
				monitorMenu.findDeviceInfo(vehiIdno.toString(), devIdno);
			}
		}else if(menuId == 'paramConfig' || popId == 'paramConfig') {//参数配置
//			alert(parent.lang.support_next_version);
			var vehicle = _getRootFrameElement().vehicleManager.getVehicle(vehiIdno);
			if (vehicle == null) {
				return;
			}
			var device = null;
			if(menuId == 'gpsDevice') {
				device = vehicle.getGpsDevice();
			}else if(menuId == 'videoDevice') {
				device = vehicle.getVideoDevice();
			}else {
				device = vehicle.devList[0];
			}
			if(device.isCan808ParamConfig()) {//808参数配置
//				alert(parent.lang.support_next_version);
				if(typeof monitorMenu != 'undefined' && monitorMenu != null && (typeof monitorMenu.do808ParamConfig) == 'function') {
					monitorMenu.do808ParamConfig(vehiIdno, device.getIdno());
				}
			}else {//ttx参数配置
				if(typeof monitorMenu != 'undefined' && monitorMenu != null && (typeof monitorMenu.doTtxParamConfig) == 'function') {
					monitorMenu.doTtxParamConfig(vehiIdno, device.getIdno());
				}
			}
		}else if(menuId == 'upgrade' || popId == 'upgrade') {//设备升级（在线）
			//alert(parent.lang.support_next_version);
			var devIdno = "";
			var vehicle = _getRootFrameElement().vehicleManager.getVehicle(vehiIdno);
			if (vehicle == null) {
				return;
			}
			var showDevIdno = false;
			if(menuId == 'gpsDevice') {
				var device = vehicle.getGpsDevice();
				devIdno = device.getIdno();
				showDevIdno = true;
			}else if(menuId == 'videoDevice') {
				var device = vehicle.getVideoDevice();
				devIdno = device.getIdno();
				showDevIdno = true;
			}else{
				devIdno = vehicle.devList[0].getIdno();
				showDevIdno = false;
			}
			if(typeof monitorMenu != 'undefined' && monitorMenu != null && (typeof monitorMenu.offlineUpgrade) == 'function') {
				monitorMenu.offlineUpgrade(vehiIdno,devIdno,showDevIdno,true);
			}
		}else if(menuId == 'issued' || popId == 'issued') {//设备升级（在线）
			//alert(parent.lang.support_next_version);
			var devIdno = "";
			var vehicle = _getRootFrameElement().vehicleManager.getVehicle(vehiIdno);
			if (vehicle == null) {
				return;
			}
			var showDevIdno = false;
			if(menuId == 'gpsDevice') {
				var device = vehicle.getGpsDevice();
				devIdno = device.getIdno();
				showDevIdno = true;
			}else if(menuId == 'videoDevice') {
				var device = vehicle.getVideoDevice();
				devIdno = device.getIdno();
				showDevIdno = true;
			}else{
				devIdno = vehicle.devList[0].getIdno();
				showDevIdno = false;
			}
			if(typeof monitorMenu != 'undefined' && monitorMenu != null && (typeof monitorMenu.offlineUpgrade) == 'function') {
				monitorMenu.offlineUpgrade(vehiIdno,devIdno,showDevIdno,false);
			}
		}
		else if(menuId == 'tpms' || popId == 'tpms') {			//TPMS  胎压监测
			var devIdno = "";
			var vehicle = _getRootFrameElement().vehicleManager.getVehicle(vehiIdno);
			if (vehicle == null) {
				return;
			}
			var showDevIdno = false;
			if(menuId == 'gpsDevice') {
				var device = vehicle.getGpsDevice();
				devIdno = device.getIdno();
			}else if(menuId == 'videoDevice') {
				var device = vehicle.getVideoDevice();
				devIdno = device.getIdno();
			}else{
				devIdno = vehicle.devList[0].getIdno();
			}
			if(typeof monitorMenu != 'undefined' && monitorMenu != null && (typeof monitorMenu.offlineUpgrade) == 'function') {
				monitorMenu.findTpmsInfo(vehiIdno,devIdno);
			}
		}
		else if(menuId == 'sendMessage' || popId == 'sendMessage') {//下发文字信息
			var devIdno = "";
			var vehicle = _getRootFrameElement().vehicleManager.getVehicle(vehiIdno.toString());
			if (vehicle == null) {
				return;
			}
			if(menuId == 'gpsDevice') {
				var device = vehicle.getGpsDevice();
				devIdno = device.getIdno();
			}else if(menuId == 'videoDevice') {
				var device = vehicle.getVideoDevice();
				devIdno = device.getIdno();
			}
			if(typeof monitorMenu != 'undefined' && monitorMenu != null && (typeof monitorMenu.issuedInformation) == 'function') {
				monitorMenu.issuedInformation(vehicle.getParentId(), vehiIdno.toString(), devIdno);
			}
		}else if(menuId == 'drawAreaManage') { //画区域操作
			if(popId == 'drawPoint') {//画标记点
				this.drawAreaManage(vehiIdno.toString(), 1);
			}else if(popId == 'drawCircle') {//画圆
				this.drawAreaManage(vehiIdno.toString(), 10);
			}else if(popId == 'drawRectangle') {//画矩形
				this.drawAreaManage(vehiIdno.toString(), 2);
			}else if(popId == 'drawPolygon') { //画多边形
				this.drawAreaManage(vehiIdno.toString(), 3);
			}
		}else if(menuId == 'waybill') {//运单信息
			this.showWaybillInfo(vehiIdno.toString());
		}else if(menuId == 'playback') {//轨迹回放
			this.trackPlayback(vehiIdno.toString());
		}else if(menuId == 'videoback'){//录像回放
			this.trackVedioback(vehiIdno.toString());
		}else {//更多
			alert(menuId+','+popId);
		}
	}
}

/**
 * 加载地图点聚合参数
 * @param init 是否初始化
 */
monitorVehicleMapTip.prototype.loadMarkerClusterParam = function(init) {
	//初始化地图点聚合参数
	//是否启用点聚合
	var enableMarkerCluster_ = $.cookie(DEF_Enable_Marker_Cluster);
	//最大聚合级别
	var maxClusterZoom_ = $.cookie(DEF_Max_Cluster_Zoom);
	//最小聚合数量
	var minClusterSize_ = $.cookie(DEF_Min_Cluster_Size);
	if (typeof ttxMap != 'undefined' && ttxMap != null) {
		var myClass = this;
		if(enableMarkerCluster_ != null && enableMarkerCluster_ == '1') {
			ttxMap.setMarkerClusterParam(true, maxClusterZoom_, minClusterSize_, function() {
				//新增车辆到地图
				if (typeof monitorStatus != 'undefined' && monitorStatus != null) {
					monitorStatus.selectVehicleToMapEx();
				}
			},function() {
				//删除地图所有车辆
				myClass.removeAllVehicleInMap();
			});
		}else {
			if(!init) {
				ttxMap.setMarkerClusterParam(false, '', '', function() {
					//新增车辆到地图
					if (typeof monitorStatus != 'undefined' && monitorStatus != null) {
						monitorStatus.selectVehicleToMapEx();
					}
				},function() {
					//删除地图所有车辆
					myClass.removeAllVehicleInMap();
				});
			}
		}
	}
}

/**
 * 地图上画区域管理，主要是点和圆
 * 画区域时，要求车辆静止（不更新实时位置），画区域结束后更新
 * vehiIdno 车牌号
 * type 1表示点 2表示矩形 10表示圆
 */
monitorVehicleMapTip.prototype.drawAreaManage = function(vehiIdno, type) {
	var vehicle = _getRootFrameElement().vehicleManager.getVehicle(vehiIdno);
	if(vehicle != null) {
		//设置正在画区域
		vehicle.setDrowing(true);
		//获取车辆的地图经纬度信息
		var point = vehicle.getMapLngLat();
		//调用下层画区域操作
		if(typeof ttxMap != 'undefined' && ttxMap != null) {
			if(type == 1 || type == 10) {
				ttxMap.doMapDrawMarker(type, point.lng, point.lat, 100);
			}else {
				ttxMap.doAddDrawMarker(type);
			}
			this.drowingVehiIdno = vehiIdno;
		}
	}
}

/**
 * 显示运单界面
 * 先查询是否存在运单信息，存在则弹出信息框
 */
monitorVehicleMapTip.prototype.showWaybillInfo = function(vehiIdno) {
	if(typeof monitorChemical != 'undefined' && monitorChemical != null) {
		monitorChemical.showWaybillInfo(vehiIdno);
	}
}

/**
 * 轨迹回放
 * 弹出轨迹回放页面进行轨迹回放
 */
monitorVehicleMapTip.prototype.trackPlayback = function(vehiIdno) {
	$('#mainPanel-all').find('#mainPanel-playback').remove();
	_getRootFrameElement().loadSubPage('li#tab-playback.playback', 'playback');
	_getRootFrameElement().controlMonitorPage('playback');
	_getRootFrameElement().reloadPlayBackPage('playback', 'SafeDashboardManagement/Playback.html?type=2');
	_getRootFrameElement().defaultTrackVehiIdno = vehiIdno;
	
	//
//	$('#mainPanel-all').find('#mainPanel-guiji').remove();
//	parent.loadSubPage('li#tab-guiji.guiji', 'guiji');
//	parent.controlMonitorPage('guiji');
//	parent.reloadPage('guiji');
//	var target = '../index.html?lang='+ parent.langCurLocal() +'&pageclik=guiji&vehiIdno='+vehiIdno;
//	window.open(target);
}

/**
 * 录像回放
 * 弹出录像回放页面进行录像回放
 */
monitorVehicleMapTip.prototype.trackVedioback = function(vehiIdno) {
	$('#mainPanel-all').find('#mainPanel-playback').remove();
	_getRootFrameElement().loadSubPage('li#tab-playback.playback', 'playback');
	_getRootFrameElement().controlMonitorPage('playback');
	_getRootFrameElement().reloadPlayBackPage('playback', 'SafeDashboardManagement/Playback.html?type=1');
	_getRootFrameElement().defaultTrackVehiIdno = vehiIdno;
	
//	$('#mainPanel-all').find('#mainPanel-guiji').remove();
//	parent.loadSubPage('li#tab-luxiang.luxiang', 'luxiang');
//	parent.controlMonitorPage('luxiang');
//	parent.reloadPage('luxiang');
	
//	var target = '../index.html?lang='+ parent.langCurLocal() +'&pageclik=guiji&vehiIdno='+vehiIdno;
//	window.open(target);
}


/**
 * //设置车辆画区域标志
 * @param flag
 */
monitorVehicleMapTip.prototype.setVehicleDrowing = function(flag) {
	if(!flag) {
		if(this.drowingVehiIdno != null) {
			var vehicle = _getRootFrameElement().vehicleManager.getVehicle(this.drowingVehiIdno);
			if(vehicle != null) {
				//设置画区域结束
				vehicle.setDrowing(false);
				this.drowingVehiIdno = null;
			}
		}
	}
}

/**
 * 添加标记到地图
 */
monitorVehicleMapTip.prototype.insertMarker = function(markerId) {
	if(typeof ttxMap != 'undefined' && ttxMap != null) {
		ttxMap.insertMarker(markerId);
	}
}

/**
 * 更新标记
 */
monitorVehicleMapTip.prototype.updateMarker = function(markerId, typeId, name, jindu, weidu
		, tabType, color, status, param, iconImage) {
	if(typeof ttxMap != 'undefined' && ttxMap != null) {
		ttxMap.updateMarker(markerId, typeId, name, jindu, weidu
				, tabType, color, status, param, iconImage);
	}
}

/**
 * 选中标记
 */
monitorVehicleMapTip.prototype.selectMarker = function(markerId) {
	if(typeof ttxMap != 'undefined' && ttxMap != null) {
		ttxMap.selectMarker(markerId);
	}
}

/**
 * 从地图删除标记
 */
monitorVehicleMapTip.prototype.deleteMarker = function(markerId) {
	if(typeof ttxMap != 'undefined' && ttxMap != null) {
		ttxMap.deleteMarker(markerId);
	}
}

/**
 * 查找标记
 */
monitorVehicleMapTip.prototype.findMarker = function(markerId) {
	if(typeof ttxMap != 'undefined' && ttxMap != null) {
		return ttxMap.findMarker(markerId);
	}
	return null;
}

/**
 * 给标记添加事件  event 事件类型   callback 回调函数
 */
monitorVehicleMapTip.prototype.addMarkerEventListener = function(markerId, event, callback) {
	if(typeof ttxMap != 'undefined' && ttxMap != null) {
		this.mapWindows.addMarkerEventListener(markerId, event, callback);
	}
}

/**
 * 显示线路到地图   //删除线路到地图
 * @param vehiTeamId 线路id
 * @param type 类型 0上行  1下行
 * @param isOnShowMap 是否显示
 */
monitorVehicleMapTip.prototype.displayLineOnMap = function(vehiTeamId, type, isOnShowMap) {
	var team = _getRootFrameElement().vehicleManager.getTeam(vehiTeamId);
	if(team != null) {
		var lineInfo = _getRootFrameElement().vehicleManager.getLineInfo(vehiTeamId);//线路信息
		var stationIndexs = null; //站点索引集合
		var lineMapId_ = this.defaultLineId + parseInt(vehiTeamId.toString() + type.toString(), 10); //线路在地图的标识
		if(type == 1) {//下行
			if(lineInfo != null) {
				stationIndexs = lineInfo.getDownLine().getStationIndexList();
			}
		}else {
			if(lineInfo != null) {
				stationIndexs = lineInfo.getUpLine().getStationIndexList();
			}
		}
		//线路是否显示在地图
		if(!isOnShowMap) {//如果线路已经显示在地图上
			if(type == 1) {//下行
				team.setOnShowDownMap(false);
			}else {
				team.setOnShowUpMap(false);
			}
			//删除线路和站点
			this.deleteMarker(lineMapId_);
			if(stationIndexs != null && stationIndexs.length > 0) {
				for (var i = 0; i < stationIndexs.length; i++) {
					//线路id-线路方向-站点id
					var relationId_ = vehiTeamId.toString()+'-'+type.toString()+'-'+stationIndexs[i];
					var relation_ = _getRootFrameElement().vehicleManager.getStationRelation(relationId_);
					if(relation_ != null) {
						this.deleteMarker(this.defaultStationId + parseInt(relation_.getId(), 10));
					}
				}
			}
		}else {
			var data = lineInfo.getLineRealStatus(type);
			//位置有效
			var lineMapType = 0;
			if(data.mapJingDu && data.mapWeiDu) {
				if(type == 1) {//下行
					team.setOnShowDownMap(true);
					lineMapType = lineInfo.getDownLine().getMapType();
				}else {
					team.setOnShowUpMap(true);
					lineMapType = lineInfo.getUpLine().getMapType();
				}
				//添加线路到地图上
				this.insertMarker(lineMapId_);
				//经纬度转换
				var lineGps = {};
				if(this.mapType != lineMapType) {
					lineGps = this.getConvertBaiduGoogle(data.mapJingDu, data.mapWeiDu, lineMapType);
				}else {
					lineGps.lng = data.mapJingDu;
					lineGps.lat = data.mapWeiDu;
				}
				
				//更新线路信息
				this.updateMarker(lineMapId_, 9, data.name + ' - ' + data.direct,
						lineGps.lng, lineGps.lat, 0, data.color, data.statusString, 0);
				//选中线路
				this.selectMarker(lineMapId_);
				if(stationIndexs != null && stationIndexs.length > 0) {
					var startStationIndex = 0;
					var endStationIndex = 0;
					if(type == 1) {//下行
						startStationIndex = lineInfo.getDownLine().getStartStationIndex();
						endStationIndex = lineInfo.getDownLine().getEndStationIndex();
					}else {
						startStationIndex = lineInfo.getUpLine().getStartStationIndex();
						endStationIndex = lineInfo.getUpLine().getEndStationIndex();
					}
//					var lngs_ = [];
//					var lats_ = [];
					for (var i = 0; i < stationIndexs.length; i++) {
						var iconImage = "";
						if(stationIndexs[i] == startStationIndex) {//起点站
							iconImage = "begin";
						}else if(stationIndexs[i] == endStationIndex) { //终点站
							iconImage = "end";
						}else {//普通站台
							iconImage = "station";
						}
						
						//线路id-线路方向-站点id
						var relationId_ = vehiTeamId.toString()+'-'+type.toString()+'-'+stationIndexs[i];
						var relation_ = _getRootFrameElement().vehicleManager.getStationRelation(relationId_);
						if(relation_ != null) {
							var station_ = _getRootFrameElement().vehicleManager.getStationInfo(relation_.getStationId());
							var stationMapId_ = this.defaultStationId + parseInt(relation_.getId(), 10);
							//添加站点到地图上
							this.insertMarker(stationMapId_);
							var stationData = relation_.getStationRealStatus(lineInfo, station_);
							//经纬度转换
							var stationGps = {};
							if(this.mapType != station_.getMapType()) {
								stationGps = this.getConvertBaiduGoogle(stationData.mapJingDu, stationData.mapWeiDu, station_.getMapType());
							}else {
								stationGps.lng = stationData.mapJingDu;
								stationGps.lat = stationData.mapWeiDu;
							}
							//更新站点信息
							this.updateMarker(stationMapId_, 1, stationData.name + ' - ' + stationData.direct,
									stationGps.lng , stationGps.lat, 0, 'FF0000',
									stationData.statusString, 0, iconImage);
							
						}
					}
				}
			}
		}
	}
}

/**
 * 选择线路
 * @param vehiTeamId 线路id
 * @param type 类型 0上行  1下行
 */
monitorVehicleMapTip.prototype.selectLineOnMap = function(vehiTeamId, type) {
	var lineMapId_ = this.defaultLineId + parseInt(vehiTeamId.toString() + type.toString(), 10); //线路在地图的标识
	//选中线路
	this.selectMarker(lineMapId_);
}

//经纬度转换，mapType_标记的地图类型
monitorVehicleMapTip.prototype.getConvertBaiduGoogle = function(jingDu, weiDu, mapType_) {
	var ret = {};
	ret.lng = '';
	ret.lat = '';
	var jingDus = jingDu.toString().split(',');
	var weiDus = weiDu.toString().split(',');
	if(typeof convertBaiduGoogle == 'function') {
		if(mapType_ == 3 && !this.isBaiduMap()) {//百度转谷歌
			for (var i = 0; i < jingDus.length; i++) {
				var gps = convertBaiduGoogle(weiDus[i], jingDus[i], 1);
				if(i != 0) {
					ret.lng += ',';
					ret.lat += ',';
				}
				ret.lng += gps.lng;
				ret.lat += gps.lat;
			}
		}else if(mapType_ != 3 && this.isBaiduMap()){//谷歌经纬度转为百度经纬度
			for (var i = 0; i < jingDus.length; i++) {
				var gps = convertBaiduGoogle(weiDus[i], jingDus[i], 2);
				if(i != 0) {
					ret.lng += ',';
					ret.lat += ',';
				}
				ret.lng += gps.lng;
				ret.lat += gps.lat;
			}
		}else {
			ret.lng = jingDu;
			ret.lat = weiDu;
		}
	}else {
		ret.lng = jingDu;
		ret.lat = weiDu;
	}
	return ret;	
}

//是否百度地图
monitorVehicleMapTip.prototype.isBaiduMap = function() {
	if (this.mapType == 3) {
		return true;
	} else {
		return false;
	}
}

/**
 * 显示环卫线路到地图   //删除环卫线路到地图
 * @param vehiTeamId 线路id
 * @param isOnShowMap 是否显示
 * @param isContainStation 是否操作站点
 * @param isShowLineName 是否显示线路名称
 */
monitorVehicleMapTip.prototype.displayHWCLineOnMap = function(vehiTeamId, isOnShowMap, isContainStation, isShowLineName) {
	var type = 0;
	var team = _getRootFrameElement().vehicleManager.getTeam(vehiTeamId);
	if(team != null) {
		var lineInfo = _getRootFrameElement().vehicleManager.getLineInfo(vehiTeamId);//线路信息
		var stationIndexs = null; //站点索引集合
		var lineMapId_ = this.defaultLineId + parseInt(vehiTeamId.toString(), 10); //线路在地图的标识
		if(lineInfo != null) {
			stationIndexs = lineInfo.getUpLine().getStationIndexList();
		}
		//线路是否显示在地图
		if(!isOnShowMap) {//如果线路已经显示在地图上
			team.setOnShowUpMap(false);
			//删除线路和站点
			this.deleteMarker(lineMapId_);
			//删除对应的车辆画线
			this.deleteHWCVehicleLine(vehiTeamId);
			if(isContainStation) {//是否操作站点
				if(stationIndexs != null && stationIndexs.length > 0) {
					for (var i = 0; i < stationIndexs.length; i++) {
						//线路id-线路方向-站点id
						var relationId_ = vehiTeamId.toString()+'-'+type.toString()+'-'+stationIndexs[i];
						var relation_ = _getRootFrameElement().vehicleManager.getStationRelation(relationId_);
						if(relation_ != null) {
							this.deleteMarker(this.defaultStationId + parseInt(relation_.getId(), 10));
						}
					}
				}
			}
		}else {
			var data = lineInfo.getLineRealStatus(type);
			//位置有效
			var lineMapType = 0;
			if(data.mapJingDu && data.mapWeiDu) {
				if(type == 1) {//下行
					team.setOnShowDownMap(true);
					lineMapType = lineInfo.getDownLine().getMapType();
				}else {
					team.setOnShowUpMap(true);
					lineMapType = lineInfo.getUpLine().getMapType();
				}
				//添加线路到地图上
				this.insertMarker(lineMapId_);
				//经纬度转换
				var lineGps = {};
				if(this.mapType != lineMapType) {
					lineGps = this.getConvertBaiduGoogle(data.mapJingDu, data.mapWeiDu, lineMapType);
				}else {
					lineGps.lng = data.mapJingDu;
					lineGps.lat = data.mapWeiDu;
				}
				//更新线路信息
				this.updateMarker(lineMapId_, 9, data.name,
						lineGps.lng, lineGps.lat, 0, data.color, data.statusString, 0);
				//根据判断设置线路名称隐藏还是显示
				if(!isShowLineName) {
					this.editMarkerName(lineMapId_, "");
				}
				this.setStrokeWeight(lineMapId_, 5);
				//选中线路
				this.selectMarker(lineMapId_);
				//添加车辆画线点
				this.drowHWCVehicleLine(vehiTeamId, isShowLineName);
				if(isContainStation) {//是否操作站点
					if(stationIndexs != null && stationIndexs.length > 0) {
						var startStationIndex = 0;
						var endStationIndex = 0;
						if(type == 1) {//下行
							startStationIndex = lineInfo.getDownLine().getStartStationIndex();
							endStationIndex = lineInfo.getDownLine().getEndStationIndex();
						}else {
							startStationIndex = lineInfo.getUpLine().getStartStationIndex();
							endStationIndex = lineInfo.getUpLine().getEndStationIndex();
						}
						for (var i = 0; i < stationIndexs.length; i++) {
							var iconImage = "";
							if(stationIndexs[i] == startStationIndex) {//起点站
								iconImage = "begin";
							}else if(stationIndexs[i] == endStationIndex) { //终点站
								iconImage = "end";
							}else {//普通站台
								iconImage = "station";
							}
							
							//线路id-线路方向-站点id
							var relationId_ = vehiTeamId.toString()+'-'+type.toString()+'-'+stationIndexs[i];
							var relation_ = _getRootFrameElement().vehicleManager.getStationRelation(relationId_);
							if(relation_ != null) {
								var station_ = _getRootFrameElement().vehicleManager.getStationInfo(relation_.getStationId());
								var stationMapId_ = this.defaultStationId + parseInt(relation_.getId(), 10);
								//添加站点到地图上
								this.insertMarker(stationMapId_);
								var stationData = relation_.getStationRealStatus(lineInfo, station_);
								//经纬度转换
								var stationGps = {};
								if(this.mapType != station_.getMapType()) {
									stationGps = this.getConvertBaiduGoogle(stationData.mapJingDu, stationData.mapWeiDu, station_.getMapType());
								}else {
									stationGps.lng = stationData.mapJingDu;
									stationGps.lat = stationData.mapWeiDu;
								}
								//更新站点信息
								this.updateMarker(stationMapId_, 1, stationData.name,
										stationGps.lng , stationGps.lat, 0, 'FF0000',
										stationData.statusString, 0, iconImage);
							}
						}
					}
				}
			}
		}
	}
}

/**
 * 画车辆经过的线路(环卫)
 * @param vehiTeamId 线路id
 */
monitorVehicleMapTip.prototype.drowHWCVehicleLine = function(vehiTeamId, isShowLineName) {
	var type = 0;
	var lineInfo = _getRootFrameElement().vehicleManager.getLineInfo(vehiTeamId);//线路信息
	if(lineInfo.status != 2) {
		var vehiList_ = [];
		if(lineInfo.cleaningVehicle != null) {//清洗车 红色
			lineInfo.cleaningVehicle.color = "FF0000";
			vehiList_.push(lineInfo.cleaningVehicle);
		}
		if(lineInfo.wateringVehicle != null) {//洒水车  黄色
			lineInfo.wateringVehicle.color = "FFFF00";
			vehiList_.push(lineInfo.wateringVehicle);
		}
		if(lineInfo.sweepingVehicle != null) {//扫地车 蓝色
			lineInfo.sweepingVehicle.color = "0000FF";
			vehiList_.push(lineInfo.sweepingVehicle);
		}
		if(vehiList_.length > 0) {
			//查询线路的经纬度
			var data = lineInfo.getLineRealStatus(type);
			var lineMapType = 0;
			if(type == 1) {//下行
				lineMapType = lineInfo.getDownLine().getMapType();
			}else {
				lineMapType = lineInfo.getUpLine().getMapType();
			}
			//经纬度转换
			var lineGps = {};
			if(this.mapType != lineMapType) {
				lineGps = this.getConvertBaiduGoogle(data.mapJingDu, data.mapWeiDu, lineMapType);
			}else {
				lineGps.lng = data.mapJingDu;
				lineGps.lat = data.mapWeiDu;
			}
			lineGps.lng = lineGps.lng.split(',');
			lineGps.lat = lineGps.lat.split(',');
			//排序
			//从小到大排序
			vehiList_.sort(function(a,b){
				if(a.workTime > b.workTime) {
					return 1;
				}else if(a.workTime == b.workTime) {
					return 0;
				}else {
					return -1;
				}
			});
			//从大到小排序
			vehiList_.sort(function(a,b){
				if(a.stationIndex < b.stationIndex) {
					return 1;
				}else if(a.stationIndex == b.stationIndex) {
					return 0;
				}else {
					return -1;
				}
			});
			for (var i = 0; i < vehiList_.length; i++) {
				//如果画线没有结束，则画线
				if(!vehiList_[i].isDrawEnd) {
					var markerId_ = this.defaultVehicleDriverId + vehiTeamId.toString() + i.toString();
					//先删除
					this.deleteMarker(markerId_);
					//如果地图上有线路
					var lineMapId_ = this.defaultLineId + parseInt(vehiTeamId.toString(), 10); //线路在地图的标识
					if(this.findMarker(lineMapId_) != null) {
						//向地图添加已经过线路
						var index_ = vehiList_[i].stationIndex;
						if(vehiList_[i].workStatus == 2) {
							//画线结束
							vehiList_[i].isDrawEnd = true;
							index_ = lineGps.lng.length;
						}
						var driverGps = {};
						driverGps.lng = lineGps.lng.slice(0, index_+1);
						driverGps.lat = lineGps.lat.slice(0, index_+1);
						
						/*if(vehiList_[i].workStatus != 2) {
							var point = vehiList_[i].getMapLngLat();
							if(point != null && point != '0,0') {
								driverGps.lng.push(point.lng);
								driverGps.lat.push(point.lat);
							}
						}*/
						//添加到地图
						this.insertMarker(markerId_);
						this.updateMarker(markerId_, 9, data.name,
								driverGps.lng.join(',') , driverGps.lat.join(','), 0, vehiList_[i].color,
								data.statusString, 0);
						if(!isShowLineName) {
							this.editMarkerName(markerId_, "");
						}
						this.setStrokeWeight(markerId_, 5);
					}
				}
			}
		}
	}
}

//删除线路下所有车辆的轨迹(环卫)
monitorVehicleMapTip.prototype.deleteHWCVehicleLine = function(vehiTeamId) {
	var lineInfo = _getRootFrameElement().vehicleManager.getLineInfo(vehiTeamId);//线路信息
	var vehiList_ = [];
	if(lineInfo.cleaningVehicle != null) {//清洗车
		vehiList_.push(lineInfo.cleaningVehicle);
	}
	if(lineInfo.wateringVehicle != null) {//洒水车
		vehiList_.push(lineInfo.wateringVehicle);
	}
	if(lineInfo.sweepingVehicle != null) {//扫地车
		vehiList_.push(lineInfo.sweepingVehicle);
	}
	for (var i = 0; i < vehiList_.length; i++) {
		var markerId_ = this.defaultVehicleDriverId + vehiTeamId.toString() + i.toString();
		this.deleteMarker(markerId_);
		if(vehiList_[i] != null) {
			vehiList_[i].isDrawEnd = false;
		}
	}
}

/**
 * 添加按钮和事件到地图导航栏
 * @param enable 是否启用
 */
monitorVehicleMapTip.prototype.addBtnToMapTool = function(enable, divId, title, callback) {
	if(typeof ttxMap != 'undefined' && ttxMap != null) {
		ttxMap.addBtnToMapTool(enable, divId, title, callback);
	}
}

/**
 * 添加复选框和事件到地图导航栏
 * @param enable 是否启用
 */
monitorVehicleMapTip.prototype.addCheckBoxToMapTool = function(enable, divId, title, checked, callback) {
	if(typeof ttxMap != 'undefined' && ttxMap != null) {
		ttxMap.addCheckBoxToMapTool(enable, divId, title, checked, callback);
	}
}

/**
 * 添加按钮和事件到地图导航栏
 * @param enable 是否启用
 */
monitorVehicleMapTip.prototype.editMarkerName = function(markerId, name) {
	if(typeof ttxMap != 'undefined' && ttxMap != null) {
		ttxMap.editMarkerName(markerId, name);
	}
}

/**
 * 修改标记边线的宽度，取值为大于等于1的整数  number 宽度 
 */
monitorVehicleMapTip.prototype.setStrokeWeight = function(markerId, number) {
	if(typeof ttxMap != 'undefined' && ttxMap != null) {
		ttxMap.setStrokeWeight(markerId, number);
	}
}

/**
 * 配置中心点，经度 +　纬度　＋　级别
 */
monitorVehicleMapTip.prototype.saveMapCenter = function(jingdu, weidu, level) {
	var action = "StandardPositionAction_saveMapCenter.action?mapType="+_getRootFrameElement().getMapType();
	action += "&jingDu="+(jingdu * 1000000)+"&weiDu="+(weidu * 1000000)+"&level="+level;
	$.myajax.jsonGet(action, function(json,action,success){
		if(success) {
			_getRootFrameElement().setMapConfig(jingdu, weidu, level);
			$.dialog.tips(_getRootFrameElement().lang.monitor_setSuccess,1);
		}
	});
}